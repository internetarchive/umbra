#!/usr/bin/python3.4
# vim: set sw=4 et:

import os
import sys
import argparse
import logging
import umbra
import json
from kombu import Connection, Exchange, Queue

arg_parser = argparse.ArgumentParser(prog=os.path.basename(__file__),
        description='queue-json - send json message to umbra via AMQP',
        formatter_class=argparse.ArgumentDefaultsHelpFormatter)
arg_parser.add_argument('-u', '--url', dest='amqp_url', default='amqp://guest:guest@localhost:5672/%2f',
        help='URL identifying the AMQP server to talk to')
arg_parser.add_argument('--exchange', dest='amqp_exchange', default='umbra',
        help='AMQP exchange name')
arg_parser.add_argument('--routing-key', dest='amqp_routing_key', default='url',
        help='AMQP routing key')
arg_parser.add_argument('-v', '--verbose', dest='log_level',
        action="store_const", default=logging.INFO, const=logging.DEBUG)
arg_parser.add_argument('--version', action='version',
        version="umbra {} - {}".format(umbra.version, os.path.basename(__file__)))
arg_parser.add_argument('payload_json', metavar='JSON_PAYLOAD', help='json payload to send to umbra')
args = arg_parser.parse_args(args=sys.argv[1:])

logging.basicConfig(stream=sys.stdout, level=args.log_level,
        format='%(asctime)s %(process)d %(levelname)s %(threadName)s %(name)s.%(funcName)s(%(filename)s:%(lineno)d) %(message)s')

payload = json.loads(args.payload_json)

exchange = Exchange(args.amqp_exchange, 'direct', durable=True)
with Connection(args.amqp_url) as conn:
    producer = conn.Producer(serializer='json')
    logging.info("sending to amqp url={} exchange={} routing_key={} -- {}".format(args.amqp_url, args.amqp_exchange, args.amqp_routing_key, payload))
    producer.publish(payload, routing_key=args.amqp_routing_key, exchange=exchange)

