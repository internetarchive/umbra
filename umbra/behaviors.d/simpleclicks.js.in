var umbraAboveBelowOrOnScreen = function(e) {
	var eTop = e.getBoundingClientRect().top;
	if (eTop < window.scrollY) {
		return -1; // above
	} else if (eTop > window.scrollY + window.innerHeight) {
		return 1; // below
	} else {
		return 0; // on screen
	}
}

var umbraSimpleScrollsAndClicksBehavior = {
	IDLE_TIMEOUT_SEC : 10,
	idleSince : null,
	alreadyClicked : {},

	intervalFunc : function() {
		var clickedSomething = false;
		var somethingLeftBelow = false;
		var somethingLeftAbove = false;
		var iframe_css_selector = "${iframe_css_selector}";
		var ad_selector = "${css_ad_selector}";

		if (!ad_selector || ad_selector == ""
				|| ad_selector == "${css_ad_selector}") {
			ad_selector = "uniq-selector-for-nothing-"
					+ Math.floor(Math.random()
							* (99999999 - 0 + 1))
					+ 0;
		}

		if (!iframe_css_selector
				|| iframe_css_selector == ""
				|| iframe_css_selector == "${iframe_css_selector}") {
			iframe_css_selector = "uniq-selector-for-nothing-"
					+ Math.floor(Math.random()
							* (99999999 - 0 + 1))
					+ 0;
		}

		var adElements = document.querySelectorAll(ad_selector);

		// if ad is showing which requires waiting a number of seconds
		// until it completes, don't count wait time against the timeout
		if (adElements && adElements.length > 0) {
			this.idleSince = Date.now();
			return;
		}

		var iframe = document.querySelector(iframe_css_selector);

		var clickTargets = iframe ? iframe.contentWindow.document
				.querySelectorAll("${click_css_selector}")
				: document
						.querySelectorAll("${click_css_selector}");

		for ( var i = 0; i < clickTargets.length; i++) {
			var key = clickTargets[i].id == "" ? new Date()
					.getTime()
					+ "-id-created-for-crawler-"
					+ Math.floor(Math.random()
							* (99999999 - 0 + 1))
					+ 0 : clickTargets[i].id
			clickTargets[i].id = clickTargets[i].id == "" ? key
					: clickTargets[i].id;

			if (this.alreadyClicked[key])
				continue;

			var where = umbraAboveBelowOrOnScreen(clickTargets[i]);

			if (where == 0) {
				if (!this.alreadyClicked[key]) {
					console.log("clicking on " + key);
					// do mouse over event on click target
					// since some urls are requsted only on
					// this event - see
					// https://webarchive.jira.com/browse/AITFIVE-451
					var mouseOverEvent = document
							.createEvent('Events');
					mouseOverEvent.initEvent("mouseover",
							true, false);
					clickTargets[i]
							.dispatchEvent(mouseOverEvent);
					clickTargets[i].click();
					this.alreadyClicked[key] = true;
					clickedSomething = true;
					this.idleSince = null;
					break;
				}
			} else if (where > 0) {
				somethingLeftBelow = true;
			} else if (where < 0) {
				somethingLeftAbove = true;
			}
		}

		if (!clickedSomething) {
			if (somethingLeftAbove) {
				console
						.log("scrolling UP because everything on this screen has been clicked but we missed something above");
				window.scrollBy(0, -500);
				this.idleSince = null;
			} else if (somethingLeftBelow) {
				console
						.log("scrolling because everything on this screen has been clicked but there's more below document.body.clientHeight="
								+ document.body.clientHeight);
				window.scrollBy(0, 200);
				this.idleSince = null;
			} else if (window.scrollY + window.innerHeight < document.documentElement.scrollHeight) {
				console
						.log("scrolling because we're not to the bottom yet document.body.clientHeight="
								+ document.body.clientHeight);
				window.scrollBy(0, 200);
				this.idleSince = null;
			} else if (this.idleSince == null) {
				this.idleSince = Date.now();
			}
		}

		if (!this.idleSince) {
			this.idleSince = Date.now();
		}
	},

	start : function() {
		var that = this;
		this.intervalId = setInterval(function() {
			that.intervalFunc()
		}, 250);
	},

	isFinished : function() {
		if (this.idleSince != null) {
			var idleTimeMs = Date.now() - this.idleSince;
			if (idleTimeMs / 1000 > this.IDLE_TIMEOUT_SEC) {
				return true;
			}
		}
		return false;
	},
};

// Called from outside of this script.
var umbraBehaviorFinished = function() {
	return umbraSimpleScrollsAndClicksBehavior.isFinished()
};

umbraSimpleScrollsAndClicksBehavior.start();
